-- 1. Find customers born after the year 1990.--

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_GENDER,
    CUST_YEAR_OF_BIRTH
FROM
    SH.CUSTOMERS
WHERE
    CUST_YEAR_OF_BIRTH > '1990';

-- 2. List all male customers (`CUST_GENDER = 'M'`).--

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_GENDER
FROM
    SH.CUSTOMERS
WHERE
    CUST_GENDER = 'M';

-- 3. Retrieve all female customers (`CUST_GENDER = 'F'`) living in Sydney. 

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_GENDER,
    CUST_CITY,
    CUST_STATE_PROVINCE
FROM
    SH.CUSTOMERS
WHERE
        CUST_CITY = 'Sydney'
    AND CUST_GENDER = 'F';

-- 4.Find customers with income level `"G: 130,000 - 149,999"`.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_INCOME_LEVEL
FROM
    SH.CUSTOMERS
WHERE
        CUST_GENDER = 'F'
    AND CUST_INCOME_LEVEL = 'G: 130,000 - 149,999';

-- 5.Get all customers with a credit limit above 10,000.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_CREDIT_LIMIT
FROM
    SH.CUSTOMERS
WHERE
    CUST_CREDIT_LIMIT > '10000';

-- 6. Retrieve customers from the state "California".

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_STATE_PROVINCE
FROM
    SH.CUSTOMERS
WHERE
    CUST_STATE_PROVINCE = 'CA';

-- 7. Find customers who have provided an email address.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_EMAIL
FROM
    SH.CUSTOMERS
WHERE
    CUST_EMAIL IS NOT NULL;

-- 8. List customers with missing marital status.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_MARITAL_STATUS
FROM
    SH.CUSTOMERS
WHERE
    CUST_MARITAL_STATUS IS NULL;

-- 9. Find customers whose postal code starts with "53".

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_POSTAL_CODE
FROM
    SH.CUSTOMERS
WHERE
    CUST_POSTAL_CODE LIKE '53%';

-- 10. Get customers born before 1980 with a credit limit above 5,000.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_YEAR_OF_BIRTH,
    CUST_CREDIT_LIMIT
FROM
    SH.CUSTOMERS
WHERE
        CUST_YEAR_OF_BIRTH < '1980'
    AND CUST_CREDIT_LIMIT > '5000';

--11. Retrieve customers from Almere or Amersfoort.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_CITY
FROM
    SH.CUSTOMERS
WHERE
    CUST_CITY = 'Almere'
    OR CUST_CITY = 'Amersfoort';

-- 12. Find customers who do not have a credit limit.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_CREDIT_LIMIT
FROM
    SH.CUSTOMERS
WHERE
    CUST_CREDIT_LIMIT IS NULL;
-- error -> has no output

-- 13. List customers whose phone number starts with "487".

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_MAIN_PHONE_NUMBER
FROM
    SH.CUSTOMERS
WHERE
    CUST_MAIN_PHONE_NUMBER LIKE '487%';

/*
14. Find married customers with income level `"Medium"`.

select cust_id, cust_first_name, cust_last_name, cust_income_level, cust_marital_status
from sh.customers where cust_marital_status = 'married' and cust_income_level like 'G:%' ;
-- error
*/

-- 15. Get customers whose last name starts with "G".

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME
FROM
    SH.CUSTOMERS
WHERE
    CUST_LAST_NAME LIKE 'G%';

 --16. Find customers with city_id = 51057.

SELECT
    CUST_ID,
    CUST_FIRST_NAME,
    CUST_LAST_NAME,
    CUST_CITY_ID
FROM
    SH.CUSTOMERS
WHERE
    CUST_CITY_ID = '51057';

-- 17. Retrieve all customers who are valid (`CUST_VALID = 'A'`).

select cust_id, cust_first_name, cust_last_name, cust_valid, cust_eff_from from 
sh.customers where cust_valid = 'A'; 


--18. Find customers whose effective start date (`CUST_EFF_FROM`) is after 2020.

--select cust_id, cust_first_name, cust_last_name, cust_eff_from from 
--sh.customers where cust_eff_from > to_date('31/12/2020, 12:00:00 AM', 'DD/MM/YYYY, HH:MI:SS AM'); 



--19. Retrieve customers whose effective end date (`CUST_EFF_TO`) is before 2021.

-- 20. Find customers with credit limit between 5,000 and 9,000.

select cust_id, cust_first_name, cust_last_name, cust_credit_limit from sh.customers 
where cust_credit_limit between 5000 and 9000 ;

-- 21. Get all customers from country_id = 101.

--select cust_id, cust_first_name, cust_last_name, country_id from sh.customers 
--where country_id is not nul;


--22. Find customers whose email ends with `"@company.example.com"`.

select cust_id, cust_first_name, cust_last_name, cust_email from sh.customers 
where cust_email like '%@company.example.com' ;


--23. List customers with `CUST_TOTAL_ID = 52772`.

select cust_id, cust_first_name, cust_last_name, cust_total_id, cust_eff_from from 
sh.customers where cust_total_id = '52772'; 


-- 24. Find customers with `CUST_SRC_ID` in (10, 20, 30).

select cust_id, cust_first_name, cust_last_name, cust_src_id from 
sh.customers where cust_src_id is null;

--25. Retrieve customers who either do not have email or do not have a credit LIMIT.

select cust_id, cust_first_name, cust_last_name, cust_email, cust_credit_limit from 
sh.customers where cust_email is null or cust_credit_limit is null ;


--# 25 Questions on GROUP BY and HAVING

--26. Count the number of customers in each city.
select cust_city, count(*) as cust_count from sh.customers
group by cust_city order by cust_count desc ;


--27. Find cities with more than 100 customers.

select cust_city, count(*) as cust_count from sh.customers 
group by cust_city having cust_count > 100 order by cust_count asc;

--28. Count the number of customers in each state.

select cust_state_province, count(*) as cust_state from sh.customers 
group by cust_state_province order by cust_state desc;


--29. Find states with fewer than 50 customers.

select cust_state_province, count(*) as cust_state from sh.customers
 having cust_state < 50 group by cust_state_province order by cust_state desc; 

--30. Calculate the average credit limit of customers in each city.

select cust_city, avg(cust_credit_limit) as cust_credit from sh.customers 
where cust_credit_limit is not null group by cust_city order by cust_credit asc;



--31. Find cities with average credit limit greater than 8,000.

select cust_city, avg(cust_credit_limit) as cust_credit from sh.customers 
having cust_credit > '8000' group by cust_city order by cust_credit desc;


--32. Count customers by marital status.
select cust_marital_status, count(*) as cust_marital from sh.customers
group by cust_marital_status order by cust_marital desc;

--33. Find marital statuses with more than 200 customers.
select cust_marital_status, count(*) as cust_marital from sh.customers 
group by cust_marital_status having cust_marital > 200 order by cust_marital desc;

--34. Calculate the average year of birth grouped by gender.

select cust_gender, avg(cust_year_of_birth) as cust_avg_birth from sh.customers 
group by cust_gender order by cust_avg_birth asc;

--35. Find genders with average year of birth after 1990.

select cust_gender, avg(cust_year_of_birth) as cust_birth from sh.customers 
group by cust_gender having cust_birth > 1990 order by cust_birth desc;


--36. Count the number of customers in each country.
select country_id, count(*) as cust_country from sh.customers 
group by country_id order by cust_country asc;


--37. Find countries with more than 1,000 customers.
select country_id , count(*) as cust_count from sh.customers 
group by country_id having cust_count > 1000 order by cust_count desc;


--38. Calculate the total credit limit per state.
select cust_state_province, sum(cust_credit_limit) as cust_add from sh.customers 
group by cust_state_province order by cust_add desc;

--39. Find states where the total credit limit exceeds 100,000.
select cust_state_province, sum(cust_credit_limit) as cust_limit from sh.customers 
group by cust_state_province having cust_limit > 100000 order by cust_limit desc;


--40. Find the maximum credit limit for each income level.
select cust_income_level, max(cust_credit_limit) as cust_max from sh.customers 
group by cust_income_level order by cust_max desc;

--41. Find income levels where the maximum credit limit is greater than 15,000.
select cust_income_level, max(cust_credit_limit) as max_limit from sh.customers 
group by cust_income_level having max_limit > 15000 order by max_limit desc;
 
--42. Count customers by year of birth.
select cust_year_of_birth, count(*) as by_birth from sh.customers 
group by cust_year_of_birth order by by_birth desc;

--43. Find years of birth with more than 50 customers.
select cust_year_of_birth, count(*) as birth_count from sh.customers 
group by cust_year_of_birth having birth_count > 50 order by birth_count desc;

--44. Calculate the average credit limit per marital status.
select cust_marital_status, avg(cust_credit_limit) as avg_marital from sh.customers 
group by cust_marital_status order by avg_marital desc;

--45. Find marital statuses with average credit limit less than 5,000.
select cust_marital_status, avg(cust_credit_limit) as credit_marital from sh.customers 
group by cust_marital_status having credit_marital < 5000 order by credit_marital asc;


--46. Count the number of customers by email domain (e.g., `company.example.com`).

select substr(cust_email, instr(cust_email,'@')+1) as email_domain,
count(*) as custom_mail from sh.customers group by email_domain 
order by custom_mail desc;


--47. Find email domains with more than 300 customers.

select substr(cust_email, instr(cust_email,'@')+1) as email_domain,
count(*) as custom_mails from sh.customers group by email_domain
having custom_mails > 300 order by custom_mails desc;

--48. Calculate the average credit limit by validity (`CUST_VALID`).

select cust_valid, avg(cust_credit_limit) as cust_limit from sh.customers
group by cust_valid order by cust_limit desc; 


--49. Find validity groups where the average credit limit is greater than 7,000.

select cust_valid, avg(cust_credit_limit) as cust_limit from sh.customers
group by cust_valid having cust_limit > 7000 order by cust_limit desc;

--50. Count the number of customers per state and city combination where there are more than 50 customers.

select cust_state_province, cust_city , count(*) as cust_popul from sh.customers 
group by cust_state_province, cust_city  having cust_popul > 50 order by cust_popul desc;
